package vn.smartdev.invoice.manager;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import vn.smartdev.invoice.dao.entity.Invoice;import vn.smartdev.invoice.dao.entity.InvoiceDetail;import vn.smartdev.invoice.dao.entity.Status;import vn.smartdev.invoice.dao.model.CartModel;import vn.smartdev.invoice.dao.model.InvoiceModel;import vn.smartdev.invoice.dao.repository.InvoiceDetailRepository;import vn.smartdev.invoice.dao.repository.InvoiceRepository;import vn.smartdev.product.manager.SendEmailSevices;import java.util.ArrayList;import java.util.Calendar;import java.util.List;/** * Created by Nguyen on 30/11/2016. */@Servicepublic class InvoiceServiceImpl implements InvoiceService {    @Autowired    InvoiceRepository invoiceRepository;    @Autowired    InvoiceDetailService invoiceDetailService;    @Autowired    SendEmailSevices sendEmailSevices;    @Override    public List<Invoice> getAll() {        return invoiceRepository.findAll();    }    @Override    public Invoice findById(String id) {        return invoiceRepository.findOne(id);    }    @Override    public void save(InvoiceModel invoiceModel, List<CartModel> cartModels) {        Invoice invoice = new Invoice();        invoice.setEmail(invoiceModel.getEmail());        invoice.setAddress(invoiceModel.getAddress());        invoice.setCity(invoiceModel.getCity());        invoice.setFirstName(invoiceModel.getFirstName());        invoice.setLastName(invoiceModel.getLastName());        invoice.setUsername(invoiceModel.getUsername());        invoice.setInvoiceDate(Calendar.getInstance().getTime());        invoice.setPhone(invoiceModel.getPhone());        invoice.setStatus(Status.NotYet);        invoiceRepository.save(invoice);        for (CartModel cartModel : cartModels){            InvoiceDetail invoiceDetail = new InvoiceDetail();            invoiceDetail.setInvoice(invoice);            invoiceDetail.setAmount(cartModel.getProductDetail().getProductDetailPrice()*cartModel.getQuantity());            invoiceDetail.setProductDetail(cartModel.getProductDetail());            invoiceDetail.setQuantity(cartModel.getQuantity());            invoiceDetail.setDiscount(cartModel.getDiscount());            invoiceDetailService.save(invoiceDetail);        }        sendEmailSevices.sendEmail(invoice.getEmail());    }    @Override    public void deleteByinvoice(Invoice invoice) {        invoiceRepository.delete(invoice);    }    @Override    public void deleteById(String id) {        Invoice invoice = invoiceRepository.findOne(id);        invoiceDetailService.deleteInvoiceDetailsByInvoice(invoice);        invoiceRepository.delete(id);    }    @Override    public List<Invoice> findByUsername(String username) {        return invoiceRepository.findByUsername(username);    }    @Override    public void saveInvoice(Invoice invoice) {        invoiceRepository.save(invoice);    }}