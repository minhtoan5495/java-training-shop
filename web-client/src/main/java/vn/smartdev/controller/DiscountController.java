package vn.smartdev.controller;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Controller;import org.springframework.ui.Model;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RequestMethod;import org.springframework.web.bind.annotation.RequestParam;import vn.smartdev.product.dao.entity.Discount;import vn.smartdev.product.dao.entity.Product;import vn.smartdev.product.manager.DiscountServices;import vn.smartdev.product.manager.ProductServices;import javax.servlet.http.HttpServletRequest;import java.sql.Date;import java.util.List;/** * Created by Nguyen on 17/12/2016. */@Controller@RequestMapping(value = "/admin", method = RequestMethod.GET)public class DiscountController {    @Autowired    DiscountServices discountServices;    @Autowired    ProductServices productServices;    @RequestMapping(value = "/discount", method = RequestMethod.GET)    public String showAll(Model model)    {        List<Discount> discounts = discountServices.listAll();        model.addAttribute("listDiscount", discounts);        List<Product> products = productServices.getListProduct();        model.addAttribute("listProduct", products);        return "viewDiscountPage";    }    @RequestMapping(value = "/deleteDiscount", method = RequestMethod.GET)    public String deleteDiscount(@RequestParam("id") String discountID){        discountServices.deleteDiscount(discountID);        return "redirect:discount";    }    @RequestMapping(value = "/saveDiscount", method = RequestMethod.POST)    public String saveDiscount(HttpServletRequest request){        int discount = Integer.parseInt(request.getParameter("discount"));        Date date = Date.valueOf(request.getParameter("date"));        String [] products = request.getParameterValues("listProduct");        for (String productId : products){            Product productEntity = productServices.getProduct(productId);            Discount discountEntity = new Discount();            discountEntity.setDiscount(discount);            discountEntity.setDate(date);            discountEntity.setProduct(productEntity);            discountServices.save(discountEntity);        }        return "redirect:discount";    }}